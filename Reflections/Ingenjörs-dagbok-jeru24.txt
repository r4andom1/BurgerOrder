03-09
Grupp skapad, pratade om uppgiften i sig och skapade en privat gruppchat där vi kan nå 
varandra och dela länkar till tutorials & få kontakt med varandra på ett smidigt sätt.

04-09
Vi träffadesa och installerade de program som vi kan tänkas behöva, Docker, Git, IDEs vi
bestämde också oss för vad vi skulle använda för teknologier ie Docker istället för Podman.
Vi bestämde oss också för att använda oss av en relationsdatabas däremot måste vi i framtiden
bestämma vilken vi ska välja MySQL/PostreSQL... Man känner sig ganska vilse i uppgiften
just nu men jag tror att det blir bättre när man väl får ner en plan på hur vi ska genomföra
den.

05-09
Laboration där jag började gräva ner mig i det oändliga hålet av möjligheter med Git. Använder
mig av terminalen och testar några grundläggande kommandon. Har tidigare endast använd mig av
gränssnitt såsom GitHub Desktop och har insett att det finns många saker Git kan göra som du 
inte kan använda själv med ett sådant gränssnitt. Tittade senare på dagen på video-tutorials 
på Git vilket verkade som både repetition men hjälpde mig få in lite nytt i huvudet också.
Jag tänker mig att från början behöver jag bara få ner det grundläggande och att det tillåter
mig att i framtiden lättare utilisera lite mer avancerade koncept som Git har att erbjuda.

10-09
Gruppen möttes efter föreläsningen och vi skapade ett dokument där vi gör upp en plan, samlar
kärndelar från uppgiftsbeskrivningen och förklarar hur vi tänker gå tillväga. Vi började även
att ta våran egen varutyp och fylla på med information. Det vi i framtiden behöver göra är att
analysera uppgiften och bryta ner den, detta gör det mycket lättare att förstå hur saker ska fungera
och interagera då det är svårt att titta på en helhet och se allt det. Tillslut bestämde vi oss också
att använda oss av PostegreSQL, jag rekommenderade tidigare att vi bör använda en relationsdatabas
på grund av dess robusthet och att det är i min åsikt bäst att lära sig på grund av strukturen och
dess presteringsförmåga. Eftersom jag tidigare jobbat med databaser föreslog jag också PostgreSQL
på grund av att den har en enorm community men även ligger framför MySQL i vissa delar som att
Postgres också kan köra NoSQL vilket jag tror är bättre för de som lär sig första gången då de
senare efter använt Postgres för relationsdatabaser också lättare kan förstå och testa NoSQL där.
Det sista som gjordes idag var att komma överens om hur vi ska versionshantera, vi kommer att köra
på Git flow med en main branch och en development branch, sedan baseras Feature branches på development
och development kan forkas till en ny release branch som sedan mergas till main. Full förklaring här:
https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow
Det har varit lite tjorv i början när alla lär sig GitHub och Git men nu har vi alla pratat ihop oss
och alla branches kommer användas enligt Git flow principerna i framtiden. Att få ordning och reda
på detta tror jag kommer betalas tillbaka 100 gånger då vi verkligen lär oss hur man vill gå tillväga
istället för att bara slänga in allt i main och ha noll koll när man väl vill titta på vad som gjorts.

17-09
Today we had a lecture with some more details on how the project could be set up with examples shown using Express and Flask. Our 
group later met and discussed. We decided to go with Flask as we are currently also in a python course, this prevents some newer 
programmers in the group to be exposed to the world of javascript and can continue to focus on the fundamentals with the a bit more 
familiar python syntax. I have since last time started designing the database structure and the database will be my main 
responsibility even though ill dip my toes in each part as im familiar with apis and web development aswell. Right now i have 
realised the database has some flaws when it comes to different parts of the burger ex bread topping and sauce, which are all under 
topping. This will in the future prevent grouping of "bread" "sauces" .. when the user wants to customize the burger. Ill look into 
this issue and try to improve the database structure in general to be optimized. Its done in postgres and im using drawsql to plan 
the database structure. Today we have also finished all the different items like menues and what the burgers contain in terms of 
toppings / what menues contain in terms of sides, drinks etc. Now i have all the data that should be pushed into the database so i 
can do that when i have more of a prototype. 

-

Somewhere between the last and the commit after this one....

We got together in a group room and got everyone in the loop of what our thoughts were and what we were going to do.
I also presented the database, how the tables work and how it can be used. I drew a database schema that further
shows the relation between tables even though the many to one etc lines are not correct it gives a rough idea of what 
id in this table is the same as that id in another table. An .sql file was also exported and put into the git repo,
i also showed the group how it can be imported into pgadmin so everyone can play around with queries and such.

26-09
Today we had a laboration on Docker. I have learned the basic pillars of Docker and watched some other tutorials to better understand fundamentals. 
I feel like ive grasped the functionality of a Dockerfile, image, container and volumes. Ive also learned some basic docker commands and how you can 
build a docker file with remapping ports etc. I understand how the functionality of docker is wanted today and i also feel like docker is kind of like git. 
The basics are easy but the possibilities are endless, especially when you introduce things like Kubernetes. Ill continue to learn and try to make it work by myself as 
learning by doing seems like a good choice with Docker.


02-10
Today we dcokerized the databased. Seeing as it was already finished we thought it would be a good test subject. It was not as easy as we first thought.
Eventually we had a working dockerfile and i also added an instructions file that contains the commands to build the image and the container. This will
in the future go into a compose file so its even easier. At first i had some issues importing the database, but after reading the log file of the container
it was quite clear what the issue was so a quick google solved it. To verify it actually worked i also tried connecting to the db in the container using psql
in the terminal. After verifiying all tables were there we were good to go. Everyone also tried installing the image and run the container and to no suprise 
docker works as it should for everyone  :) The next step would be for us to connect to the database! I have done this with both js and php in the past so i doubt we 
will have any issues doing it with python, but who knows!


